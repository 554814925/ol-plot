<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  gap="16" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" initialize="init()">
	<fx:Script>
		<![CDATA[
			import com.esri.ags.symbols.FillSymbol;
			import com.esri.ags.symbols.SimpleFillSymbol;
			import com.esri.ags.symbols.SimpleLineSymbol;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			
			import gispace.plot.symbols.GradientFillSymbol;
			
			
			private var lineStyles:Array = ["solid", "dot", "dash", "dashdot", "dashdotdot"];
			private var fillStyles:Array = ["solid", "cross", "horizontal", "vertical", "diagonalcross", "forwarddiagonal", "backwarddiagonal"];
			
			private function init():void{
				var patterns:ArrayCollection = new ArrayCollection(lineStyles);
				this.outlinePattern.dataProvider = patterns;
				this.outlinePattern.selectedIndex = 0;
				patterns = new ArrayCollection(fillStyles);
				this.fillPattern.dataProvider = patterns;
				this.fillPattern.selectedIndex = 0;
			}
			
			public function get symbol():FillSymbol{
				var fColor:Number = fillColor.selectedColor;
				var fStyle:String = fillPattern.selectedItem;
				var lineWidth:Number = outlineWidth.value;
				var lineColor:Number = outlineColor.selectedColor;
				var lineStyle:String = outlinePattern.selectedItem;
				var alpha:Number = fillAlpha.value;
				var outline:SimpleLineSymbol = new SimpleLineSymbol(lineStyle, lineColor, alpha, lineWidth);
				if(this.isGradient.selected)
					return new GradientFillSymbol(GradientType.LINEAR, fColor, outline);
				return new SimpleFillSymbol(fStyle, fColor, alpha, outline);
			}
			
			private function updateThumbnail():void{
				var swatch:UIComponent = symbol.createSwatch(this.thumbnailContainer.width, this.thumbnailContainer.height);
				this.thumbnailContainer.removeAllElements();
				this.thumbnailContainer.addElement(swatch);
			}
			
			public function set symbol(symbol:FillSymbol):void{
				if(symbol is SimpleFillSymbol){
					var sSymbol:SimpleFillSymbol = symbol as SimpleFillSymbol;
					fillColor.selectedColor = sSymbol.color;
					fillPattern.selectedItem = sSymbol.style;
					fillAlpha.value = sSymbol.alpha;
					this.isGradient.selected = false;
				}
				else if(symbol is GradientFillSymbol){
					var gSymbol:GradientFillSymbol = symbol as GradientFillSymbol;
					fillColor.selectedColor = gSymbol.color;
					fillPattern.selectedItem = "solid";
					fillAlpha.value = 1;
					this.isGradient.selected = true;
				}
				var line:SimpleLineSymbol = symbol.outline;
				if(line){
					outlineWidth.value = line.width;
					outlineColor.selectedColor = line.color;
					outlinePattern.selectedItem = line.style;
				}
				this.updateThumbnail();
			}
			
			protected function gradientChangeHandler(event:Event):void{
				this.updateThumbnail();
			}
			
		]]>
	</fx:Script>
	<s:HGroup verticalAlign="middle">
		<s:Label text="填充颜色"/>
		<mx:ColorPicker id="fillColor" width="24" height="24" selectedColor="0x00FF00" change="updateThumbnail()"/>	
		<s:CheckBox id="isGradient" label="渐变填充" change="gradientChangeHandler(event)"/>
	</s:HGroup>
	<s:HGroup verticalAlign="middle" width="100%">
		<s:Label text="填充图案"/>
		<s:ComboBox id="fillPattern" color="0x000000" width="100%" change="updateThumbnail()"/>
	</s:HGroup>
	<s:HGroup verticalAlign="middle">
		<s:Label text="轮廓颜色"/>
		<mx:ColorPicker id="outlineColor" width="24" height="24" selectedColor="0xFF0000" change="updateThumbnail()"/>
		<s:Label text="轮廓宽度"/>
		<s:NumericStepper id="outlineWidth" width="60" color="0x000000" value="1" maximum="10" minimum="1" change="updateThumbnail()"/>
	</s:HGroup>
	<s:HGroup width="100%" verticalAlign="middle" gap="10">
		<s:Label text="轮廓样式"/>
		<s:ComboBox id="outlinePattern" width="100%" color="0x000000" selectedItem="solid" change="updateThumbnail()"/>
	</s:HGroup>
	<s:HGroup width="100%" verticalAlign="middle" gap="10">
		<s:Label text="透明度"/>
		<mx:HSlider id="fillAlpha" width="100%" maximum="1" minimum="0" snapInterval="0.1"
					tickColor="0xeeeeee" tickInterval="0.1" value="1" change="updateThumbnail()"/>
	</s:HGroup>
	<s:HGroup width="100%" verticalAlign="middle" gap="10" height="30">
		<s:Label text="缩略图"/>
		<s:Group width="100%" height="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="0xffffff"/>
				</s:fill>
			</s:Rect>
			<s:Group id="thumbnailContainer" width="152" height="24" horizontalCenter="0" verticalCenter="0"/>
		</s:Group>
	</s:HGroup>
</s:VGroup>
