<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="components.*"
		 width="200">
	<fx:Metadata>
		[Event(name="applySymbol", type="events.PlotEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.esri.ags.symbols.FillSymbol;
			import com.esri.ags.symbols.LineSymbol;
			import com.esri.ags.symbols.MarkerSymbol;
			import com.esri.ags.symbols.SimpleFillSymbol;
			import com.esri.ags.symbols.SimpleLineSymbol;
			import com.esri.ags.symbols.SimpleMarkerSymbol;
			import com.esri.ags.symbols.Symbol;
			
			import events.PlotEvent;
			
			private var lastState:String = "marker";
			
			private function close():void{
				this.lastState = this.currentState;
				this.currentState = "none";
			}
			
			public function updateSymbol(symbol:Symbol, label:String, format:TextFormat):void{
				if(symbol is LineSymbol){
					this.currentState = "line";
					lineSymbolPanel.symbol = symbol as SimpleLineSymbol;
				}
				else if(symbol is MarkerSymbol){
					this.currentState = "marker";
					markerSymbolPanel.symbol = symbol as SimpleMarkerSymbol;
				}
				else if(symbol is FillSymbol){
					this.currentState = "polygon";
					polygonSymbolPanel.symbol = symbol as FillSymbol;
				}
				this.textPanel.label = label;
				this.textPanel.textFormat = format;
			}
			
			private function apply():void{
				var symbol:Symbol;
				if(this.currentState == "line")
					symbol = lineSymbolPanel.symbol;
				else if(this.currentState == "marker")
					symbol = markerSymbolPanel.symbol;
				else if(this.currentState == "polygon")
					symbol = polygonSymbolPanel.symbol;
				var label:String = textPanel.label;
				var labelFormat:TextFormat = textPanel.textFormat;
				this.dispatchEvent(new PlotEvent(PlotEvent.APPLY_SYMBOL, {symbol:symbol, label:label, format:labelFormat}));
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="none"/>
		<s:State name="marker"/>
		<s:State name="line"/>
		<s:State name="polygon"/>
	</s:states>
	<s:HGroup gap="5" verticalAlign="bottom">
		<s:Group>
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor alpha="0.7" color="0x555555"/>
				</s:fill>
			</s:Rect>
			<s:Group left="5" right="5" top="10" bottom="10">
				<components:CircleButton click="{this.currentState=this.lastState}"
										 imageSource="assets/color.png" toolTip="标绘样式"/>
			</s:Group>
		</s:Group>
		<s:Group excludeFrom="none" width="100%" height="100%" itemCreationPolicy="immediate">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor alpha="0.7" color="0x555555"/>
				</s:fill>
			</s:Rect>
			<s:Group left="10" right="10" top="10" bottom="10">
				<s:Label height="24" fontSize="16" fontWeight="bold" text="" verticalAlign="middle"
						 text.line="线状符号"
						 text.marker="点状符号"
						 text.polygon="面状符号"/>
				<s:Image right="0" top="0" buttonMode="true" click="close()"
						 source="assets/close.png" toolTip="关闭" useHandCursor="true"/>
				<s:VGroup top="30" width="100%" height="100%">
					<s:HGroup>
						<s:Group>
							<components:MarkerSymbolPanel id="markerSymbolPanel" includeIn="marker"
														  itemCreationPolicy="immediate"/>
							<components:LineSymbolPanel id="lineSymbolPanel" includeIn="line"
														itemCreationPolicy="immediate"/>
							<components:PolygonSymbolPanel id="polygonSymbolPanel"
														   includeIn="polygon"
														   itemCreationPolicy="immediate"/>
						</s:Group>
						<mx:VRule height="100%"/>
						<components:TextPanel id="textPanel" includeIn="marker,line,polygon"
											  itemCreationPolicy="immediate"/>
					</s:HGroup>
					<s:HGroup width="100%" horizontalAlign="center">
						<s:Button label="应 用" click="apply()"/>
					</s:HGroup>
				</s:VGroup>
			</s:Group>
		</s:Group>
	</s:HGroup>
</s:Group>
